name: Scan docker images

on:
  schedule:
    - cron: '0 0 * * *'  # Every day at midnight
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          output: trivy-vulnerability.txt

      - name: Publish Trivy Output to Summary
        run: |
          if [[ -s trivy-vulnerability.txt ]]; then
            {
              echo "### Security Output"
              echo "<details><summary>Click to expand</summary>"
              echo ""
              echo '```terraform'
              cat trivy-vulnerability.txt
              echo '```'
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi

      - name: Set output for trivy results
        run: |
          cat trivy-vulnerability.txt
          cat trivy-vulnerability.txt | grep -i "total:" | awk '{print $2}'
          echo "VULNERABILITIES_COUNT=$(cat trivy-vulnerability.txt | grep -i "total:" | awk '{print $2}')" >> $GITHUB_ENV
          echo ${{ env.VULNERABILITIES_COUNT }}

      - name: Send slack alert if vulnerabilities found
        if: ${{ env.VULNERABILITIES_COUNT != '0' }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "Vulnerabilities found in `${{ steps.meta.outputs.tags }}` image",
              "attachments": [
                {
                  "text": "${{ steps.meta.outputs.tags }} image has vulnerabilities",
                  "fields": [
                    {
                      "title": "Image",
                      "value": "${{ steps.meta.outputs.tags }}",
                      "short": true
                    },
                    {
                      "title": "Vulnerabilities",
                      "value": "Count: ${{ env.VULNERABILITIES_COUNT }}",
                      "short": true
                    },
                    {
                      "title": "link",
                      "value": "https://github.com/port-labs/port-agent/actions/runs/${{ github.run_id }}",
                      "short": true
                    }
                  ],

                  "color": "#FF0000"
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_RND_ECOSYSTEM_DEPENDABOT_ALERTS_WEBHOOK_URL }}